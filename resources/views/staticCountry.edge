@include('head')

<script>





</script>

<nav class="purple darken-4" role="navigation">
    <div class="nav-wrapper container"><a id="logo-container" href="#" class="brand-logo">NGAAH.ID</a>
      <ul class="right hide-on-med-and-down">
        <li><a href="/">Home</a></li>
      </ul>

      <ul id="nav-mobile" class="sidenav">
        <li><a href="/">Home</a></li>
      </ul>
      <a href="#" data-target="nav-mobile" class="sidenav-trigger"><i class="material-icons">menu</i></a>
    </div>
  </nav>

  <div class="container-fluid blue darken-3 ngaah">
    
    <div class="container">
        <br>
        
    <h5 class="white-text "><span class="flag-icon flag-icon-{{{ Summary.iso2.toLowerCase() }}}"></span> {{ country }}</h5>
        
        <p class=" white-text"> COVID-19 CASE in {{ country }} </p>
    </div>
    <br>
  </div>


  <div class="row center">

    <div class="col s12 m3">
      <div class="card pink darken-4">
        <div class="card-content white-text">
          <span class="card-title">Case</span>
        <h5 class="count" id="cases">{{ Summary.cases }}</h5>
        <span> Total Case </span>
        </div>
      </div>
    </div>

    <div class="col s12 m3">
        <div class="card orange darken-3">
          <div class="card-content white-text">
            <span class="card-title">Today Case</span>
          <h5 class="count" id="cases">{{ Summary.todayCases }}</h5>
          <span> Case in this days </span>
          </div>
        </div>
      </div>

      <div class="col s12 m3">
        <div class="card grey darken-4">
          <div class="card-content white-text">
            <span class="card-title">Deaths</span>
          <h5 class="count" id="cases">{{ Summary.deaths }}</h5>
          <span> Total Deaths </span>
          </div>
        </div>
      </div>

      <div class="col s12 m3">
        <div class="card grey darken-3">
          <div class="card-content white-text">
            <span class="card-title">Today Deaths</span>
          <h5 class="count" id="cases">{{ Summary.todayDeaths	 }}</h5>
          <span> Deaths in this days </span>
          </div>
        </div>
      </div>

      <div class="col s12 m3">
        <div class="card green darken-4">
          <div class="card-content white-text">
            <span class="card-title">Recovered</span>
          <h5 class="count" id="cases">{{ Summary.recovered	}}</h5>
          <span> Total case recovered </span>
          </div>
        </div>
      </div>

      <div class="col s12 m3">
        <div class="card purple darken-4">
          <div class="card-content white-text">
            <span class="card-title">Active Case</span>
          <h5 class="count" id="cases">{{ Summary.active }}</h5>
          <span> Total active case </span>
          </div>
        </div>
      </div>

      <div class="col s12 m3">
        <div class="card red darken-3">
          <div class="card-content white-text">
            <span class="card-title">Critical</span>
          <h5 class="count" id="cases">{{ Summary.critical }}</h5>
          <span> Total Critical case </span>
          </div>
        </div>
      </div>

      <div class="col s12 m3">
        <div class="card indigo darken-3">
          <div class="card-content white-text">
            <span class="card-title">Case Per One Million</span>
          <h5 class="count" id="cases">{{ Summary.casesPerOneMillion }}</h5>
          <span> Case Per One Million </span>
          </div>
        </div>
      </div>

      
      


      <div class="col s12 m6">
        <div class="card text-white">
          <div class="card-content">
           
            <canvas height="164" id="global_pie" class="chartjs-chart mt-4"></canvas>
          </div>
        </div>
      </div>
      



      
      <div class="col s12 m6">
        <div class="card  darken-1">
          <div class="card-content white-text">
            <span class="card-title">Chart COVID-19</span>
            <canvas height="150" id="globalcase" class="chartjs-chart mt-4"></canvas>
          </div>
        </div>
      </div>

  </div>








  <div class="row">
    <div id="man" class="col s12">
      <div class="card material-table">
        <div class="table-header">
          <span class="table-title">Historical Data</span>
          <div class="actions">
            <a href="#" class="search-toggle waves-effect btn-flat nopadding"><i class="material-icons">search</i></a>
          </div>
        </div>
        <table class="striped" id="covid">
          <thead>
            <tr>
              <th  width="5%">No</th>
              <th>Country</th>
              <th>Cases</th>
              <th>Deaths</th>
              <th>Recovered</th>
              <th>Date</th>
            </tr>
          </thead>
          <tbody>


            
            @each( datum in dataTable )
            
            <tr>
              <td class="" width="5%"> </td>
              <td class="" width="5%"><span class="flag-icon flag-icon-{{{ Summary.iso2.toLowerCase() }}}"></span>  {{ datum.country }} </td>
              <td class="" width="5%"> {{ datum.cases }} </td>
              <td class="" width="5%"> {{ datum.deaths }} </td>
              <td class="" width="5%"> {{ datum.recovered }} </td>
              <td class="" width="5%"> {{ datum.date }} </td>
            </tr>
            
            @endeach

          </tbody>
        </table>
      </div>
    </div>
  </div>


@include('foot')

<script>
(function($){
  $(function(){

    $('.sidenav').sidenav();

  }); // end of document ready
})(jQuery); // end of jQuery name space





var t = $('#covid').DataTable( {
        "pageLength": 50,
        "columnDefs": [ {
            "searchable": false,
            "orderable": true,
            "targets": 0,
            targets: [ 0, 1, 2,3,4 ],
            className: 'mdl-data-table__cell--non-numeric',
            lengthData : 100,
        } ],
        "order": [[ 2, 'DESC' ]]
    } );
 
    t.on( 'order.dt search.dt', function () {
        t.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
            cell.innerHTML = i+1;
        } );
    } ).draw();


    function rendercase()
        {
            var url = "/rest/api/chart/{{ country }}";
            var date = new Array();
            var cases = new Array();
            var recovered = new Array();
            var deaths = new Array();
            $.get(url, function(response){
            response.forEach(function(data){
                date.push(data.date);
                cases.push(data.cases);
                recovered.push(data.recovered);
                deaths.push(data.deaths);
            });
            var ctx = document.getElementById("globalcase").getContext('2d');
                var myChart = new Chart(ctx, {
                  type: 'line',
                  data: {
                      labels:date,
                      datasets: [
                        {
                          label: 'Case',
                          data: cases,                     
					                borderColor: "#f1c40f",
                          
                          
                        },
                        {
                          label: 'Recovered',
                          data: recovered,
                          borderColor: "green"
                          
                        },
                        {
                          label: 'Deaths',
                          data: deaths,
                          borderColor : "red"
                          
                        },
                      ]
                  },
                  
                options: {
        
                    responsive: true,
                    maintainAspectRatio: true, 
                    aspectRatio : 2,
                   
                    legend: {
                        display: true
                    },
                    title: {
                        display: true,
                        position: "top",
                        text : "{{country}} Covid19 historial chart"
                    },
                    scales: {
                    xAxes: [{
                        display: true,       
                        gridLines: {
                            color: '#e9eff9',
                            lineWidth: 0,
                            borderDash: [3]
                        }
                    }],
                    yAxes: [{
                    	display: true,
                        gridLines: {
                            color: '#e9eff9',
                            lineWidth: 1,
                            borderDash: [3]
                        },
		              	
                    }],
                    },
                    
                    
                
                }
              });
          });
        }
        rendercase();



        function render_pie_global()
        {
         
          $.get('/rest/api/chart/pie/{{ country }}',function(value){

            console.log(value)
            

            var ctx = document.getElementById("global_pie").getContext('2d');
            var myDoughnutChart = new Chart(ctx, {
              type: 'doughnut',

              // [ dataSummary.cases, dataSummary.deaths, dataSummary.recovered, dataSummary.active, dataSummary.critical ]
              data: {
                  datasets: [{
                      data: value,
                      backgroundColor: [
                      '#f0932b',
                      '#2c3e50',
                      '#27ae60',
                      '#6c5ce7',
                      '#c0392b'
                    ],
                  }],

                  // These labels appear in the legend and in the tooltips when hovering different arcs
                  labels: [
                      'Cases',
                      'Death',
                      'Recovered',
                      'Active',
                      'Critical'
                  ]
              },
              options: {
              responsive: true,
              legend: {
                position: 'top',
              },
              animation: {
                animateScale: true,
                animateRotate: true
              }
             },
             tooltips: {
                callbacks: {
                    label: function(tooltipItem, data) {
                        var dataset = data.datasets[tooltipItem.datasetIndex];
                    var total = dataset.data.reduce(function(previousValue, currentValue, currentIndex, array) {
                        return previousValue + currentValue;
                    });
                    var currentValue = dataset.data[tooltipItem.index];
                    var percentage = Math.floor(((currentValue/total) * 100)+0.5);         
                    return percentage + "%";
                    }
                }
                }
                            
              });
            


          });


          
        }
          
        render_pie_global();

</script>